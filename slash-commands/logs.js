const { SlashCommandBuilder, PermissionFlagsBits, EmbedBuilder } = require('discord.js');
const { getLogs } = require('../utils/dataManager');

module.exports = {
    data: new SlashCommandBuilder()
        .setName('logs')
        .setDescription('Ù†Ù…Ø§ÛŒØ´ Ø¢Ø®Ø±ÛŒÙ† Ù„Ø§Ú¯â€ŒÙ‡Ø§ÛŒ Ù…Ø¯ÛŒØ±ÛŒØªÛŒ')
        .addIntegerOption(option =>
            option.setName('limit')
                .setDescription('ØªØ¹Ø¯Ø§Ø¯ Ù„Ø§Ú¯â€ŒÙ‡Ø§')
                .setRequired(false)
                .setMinValue(1)
                .setMaxValue(25))
        .setDefaultMemberPermissions(PermissionFlagsBits.Administrator),
    async execute(interaction) {
        const limit = interaction.options.getInteger('limit') || 10;
        const logs = getLogs(limit);

        if (logs.length === 0) {
            return interaction.reply({ content: 'ðŸ“‹ Ù‡ÛŒÚ† Ù„Ø§Ú¯ÛŒ Ø«Ø¨Øª Ù†Ø´Ø¯Ù‡ Ø§Ø³Øª.', ephemeral: true });
        }

        const embed = new EmbedBuilder()
            .setColor('#5865F2')
            .setTitle('ðŸ“‹ Ø¢Ø®Ø±ÛŒÙ† Ù„Ø§Ú¯â€ŒÙ‡Ø§ÛŒ Ù…Ø¯ÛŒØ±ÛŒØªÛŒ')
            .setTimestamp();

        logs.forEach((log, index) => {
            const date = new Date(log.timestamp).toLocaleString('fa-IR');
            embed.addFields({
                name: `${index + 1}. ${log.action} - ${date}`,
                value: `**Ú©Ø§Ø±Ø¨Ø±:** ${log.user.tag}\n**Ù…Ø¯ÛŒØ±:** ${log.moderator.tag}\n**Ø¹Ù„Øª:** ${log.reason || 'Ù†Ø¯Ø§Ø±Ø¯'}${log.duration ? `\n**Ù…Ø¯Øª:** ${log.duration}` : ''}`,
                inline: false
            });
        });

        await interaction.reply({ embeds: [embed], ephemeral: true });
    },
};
